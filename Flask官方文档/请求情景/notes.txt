
请求情境在请求期间跟踪请求级数据。不是将请求对象传递给请求期间运行的每个函 数，
而是访问 request 和 session 代理。


情境的用途
情境的生命周期
手动推送情境
情境如何工作
回调和错误
出错情境保存
关于代理的说明

Flask 会在多个阶段调度请求，这会影响请求，响应以及如何处理错误。情境在所有 这些阶段都处于活动状态。

Blueprint 可以为该蓝图的事件添加处理器，处理器会在蓝图与请求路由 匹配的情况下运行。

在每次请求之前， before_request() 函数都会被调用。如果其 中一个函数返回了一个值，则其他函数将被跳过。返回值被视为响应，并且视图 函数不会被调用。
如果 before_request() 函数没有返回响应，则调用匹配路由的 视图函数并返回响应。
视图的返回值被转换为实际的响应对象并传递给 after_request() 函数。每个函数都返回一个修改过的或新的响应对象。
返回响应后，将弹出情境，该情境调用 teardown_request() 和 teardown_appcontext() 函数。即使在上面任何一处引发了未处 理的异常，也会调用这些函数。

